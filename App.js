//DECLARE VARIABLES TO STORE THE SCORE OF THE USER AND COMP
let userScore = 0;
let computerScore = 0;

//GET ALL ELEMENTS FROM THE DOM

let user_score_span = document.getElementById('user-score');
let computer_score_span = document.getElementById('computer-score');
let scoreBoard_div = document.querySelector('.score-board');
let result_p = document.querySelector('.result > p');

const rock_div = document.getElementById('r');
const paper_div = document.getElementById('p');
const scissors_div = document.getElementById('s');

//COMPUTER CHOICES GENERATED BY RANDOM NUM BETWEEN 0 AND 1 INDEXES
function getComputerChoices(){
    const choices = ['r', 'p', 's'];
    const randomNumber = Math.floor(Math.random() * 3);
    
    return choices[randomNumber];
}

//CONVERT THE REUTN FROM THE GAMES RULES INTO WORDS TO BE OUTPUT AT THE WIN, LOSE, OR DRAW FUNCTIONS
function convertToWord(letter){
    if(letter == 'r') return 'Rock';
    if(letter == 'p') return 'Paper';
    if(letter == 's') return 'Scissors';
}

//WIN FUNCTION ACTION
function win(user, computer){
    userScore++;
    const smallUserWord = 'user'.fontsize(3).sub();
    const smallCompWord = 'comp'.fontsize(3).sub();
    const userChoice_div = document.getElementById(user);
    user_score_span.innerHTML = userScore;
    computer_score_span.innerHTML = computerScore;
    result_p.innerHTML  = `${convertToWord(user)}${smallUserWord}  beats  ${convertToWord(computer)}${smallCompWord}. You Win!`;
    userChoice_div.classList.add('green-glow');
    setTimeout(() =>  userChoice_div.classList.remove('green-glow'), 300);
    
}

//LOSE FUNCTION ACTION
function lose(user, computer){
    computerScore++;
    const smallUserWord = 'user'.fontsize(3).sub();
    const smallCompWord = 'comp'.fontsize(3).sub();
    const userChoice_div = document.getElementById(user);
    computer_score_span.innerHTML = computerScore;
    user_score_span.innerHTML = userScore;
    result_p.innerHTML  = `${convertToWord(user)}${smallUserWord}  beats  ${convertToWord(computer)}${smallCompWord}. You Lost!`;
    userChoice_div.classList.add('red-glow');
    setTimeout(() =>  userChoice_div.classList.remove('red-glow'), 300);
}

//DRAW FUNCTION ACTION
function draw(user, computer){
    const smallUserWord = 'user'.fontsize(3).sub();
    const smallCompWord = 'comp'.fontsize(3).sub();
    const userChoice_div = document.getElementById(user);
    result_p.innerHTML  = `${convertToWord(user)}${smallUserWord}  beats  ${convertToWord(computer)}${smallCompWord}. Its a Draw`;
    userChoice_div.classList.add('grey-glow');
    setTimeout(() => userChoice_div.classList.remove('grey-glow'), 300);
}


//GAMES RULES, CHECKS THE CHOICE OF THE COMPUTER AGAINST THE CHOICE OF THE USER AND DECIDES WHO WINS, LOSE OR DRAW
function game(userChoise){
    const computerChoice = getComputerChoices();
    switch (userChoise + computerChoice){
        case 'rs':
        case 'pr':
        case 'sp':
            win(userChoise,computerChoice);
            break;
        case 'rp':
        case 'ps':
        case 'sr':
            lose(userChoise,computerChoice);
            break;
            
        case 'rr':
        case 'pp':
        case 'ss':
            draw(userChoise,computerChoice);
            break;  
            
    }
}




// MAIN GAME EVENENTS ON CLICK
//EACH CLICK FUNCTION TRIGGERS THE GAME PLAY, AND RETURNS THE VALUE OF THE USERS CHOICE
function main(){
    rock_div.addEventListener('click', () => game('r'));

    paper_div.addEventListener('click', ()=> game('p'));

    scissors_div.addEventListener('click', ()=> game('s'));
}

main();